{"version":3,"sources":["components/Navbar/Navbar.tsx","App.tsx","components/HomePage/HomePage.tsx","components/Loader/Loader.tsx","api.ts","components/PersonLink/PersonLink.tsx","utils/search.ts","components/PeopleTable/PeopleTable.tsx","types/Sex.ts","components/PeopleFilters/PeopleFilters.tsx","utils/filter.ts","components/PeoplePage/PeoplePage.tsx","components/NotFoundPage/NotFoundPage.tsx","index.tsx"],"names":["getClassLink","isActive","classNames","Navbar","className","role","to","App","useLocation","pathname","replace","HomePage","Loader","API_URL","wait","delay","Promise","resolve","setTimeout","then","fetch","response","json","PersonLink","person","people","listName","map","human","name","personSlug","useParams","getSlug","personName","man","find","slug","sex","born","died","motherName","includes","fatherName","getSearchWith","params","search","newParams","URLSearchParams","Object","entries","forEach","key","value","delete","Array","isArray","item","append","toString","set","sortingParameters","PeopleTable","searchParams","sort","order","parameter","toLocaleUpperCase","slice","Sex","ListData","PeopleFilters","centuries","query","setSearchParams","All","Male","Female","type","placeholder","onChange","event","mewSearchParams","setSearchWith","target","num","filter","c","normalizeText","text","toLowerCase","trim","PeoplePage","useState","setPeople","isLoading","setIsLoading","isError","setIsError","useSearchParams","get","getAll","useEffect","getPeople","catch","finally","visiblePeople","useMemo","listPeople","queryName","date","gender","sortParam","desc","filterPeople","length","Math","ceil","a","b","aValue","bValue","localeCompare","reverse","getPeopleFilter","NotFoundPage","createRoot","document","getElementById","render","path","element","index"],"mappings":"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","file":"static/js/main.71939314.chunk.js","sourcesContent":["import { NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\n\nconst getClassLink = ({ isActive }: { isActive: boolean }) => classNames(\n  'navbar-item', { 'has-background-grey-lighter': isActive },\n);\n\nexport const Navbar = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            to=\"/\"\n            className={getClassLink}\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            to=\"/people\"\n            className={getClassLink}\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import './App.scss';\nimport { Navigate, Outlet, useLocation } from 'react-router-dom';\nimport { Navbar } from './components/Navbar';\n\nexport const App = () => {\n  const { pathname } = useLocation();\n\n  if (pathname === '/home') {\n    return <Navigate to=\"/\" replace />;\n  }\n\n  return (\n    <div data-cy=\"app\">\n      <Navbar />\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Outlet />\n        </div>\n      </main>\n    </div>\n  );\n};\n","export const HomePage = () => (\n  <h1 className=\"title\">\n    Home Page\n  </h1>\n);\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport async function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Link, useParams } from 'react-router-dom';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person,\n  people: Person[],\n};\n\nexport const PersonLink: React.FC<Props> = ({ person, people }) => {\n  const listName = people.map(human => human.name);\n\n  const { personSlug } = useParams();\n\n  const getSlug = (personName: string) => {\n    const man = people.find(human => human.name === personName);\n\n    return man?.slug;\n  };\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={classNames({\n        'has-background-warning': personSlug === person.slug,\n      })}\n    >\n      <td>\n        <Link\n          to={`../${person.slug}`}\n          className={classNames({\n            'has-text-danger': person.sex === 'f',\n          })}\n        >\n          {person.name}\n        </Link>\n      </td>\n\n      <td>{person.sex}</td>\n      <td>{person.born}</td>\n      <td>{person.died}</td>\n      <td>\n        {\n          person.motherName && listName.includes(person.motherName) ? (\n            <Link\n              to={`../${getSlug(person.motherName)}`}\n              className=\"has-text-danger\"\n            >\n              {person.motherName}\n            </Link>\n          ) : (\n            person.motherName || '-'\n          )\n        }\n      </td>\n      <td>\n        {\n          person.fatherName && listName.includes(person.fatherName) ? (\n            <Link\n              to={`../${getSlug(person.fatherName)}`}\n            >\n              {person.fatherName}\n            </Link>\n          ) : (\n            person.fatherName || '-'\n          )\n        }\n      </td>\n    </tr>\n  );\n};\n","export type Param = string | number;\n\ntype Params = {\n  [key: string]: Param | Param[] | null\n};\n\nexport function getSearchWith(\n  params: Params,\n  search?: URLSearchParams,\n) {\n  const newParams = new URLSearchParams(search);\n\n  Object.entries(params)\n    .forEach(([key, value]) => {\n      if (value === null) {\n        newParams.delete(key);\n      } else if (Array.isArray(value)) {\n        newParams.delete(key);\n        value.forEach(item => newParams.append(key, item.toString()));\n      } else {\n        newParams.set(key, value.toString());\n      }\n    });\n\n  return newParams.toString();\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person, PersonsKeys } from '../../types';\nimport { PersonLink } from '../PersonLink';\nimport { getSearchWith } from '../../utils/search';\n\nconst sortingParameters = ['name', 'sex', 'born', 'died'];\n\ntype Props = {\n  people: Person[],\n  searchParams: URLSearchParams,\n  sort: PersonsKeys | '',\n  order: string,\n};\n\nexport const PeopleTable: React.FC<Props> = ({\n  people,\n  searchParams,\n  sort,\n  order,\n}) => {\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          {sortingParameters.map(parameter => (\n            <th>\n              <span className=\"is-flex is-flex-wrap-nowrap\">\n                {parameter[0].toLocaleUpperCase() + parameter.slice(1)}\n                {order === 'desc' && sort === parameter\n                  ? (\n                    <Link\n                      to={{\n                        search:\n                          getSearchWith(\n                            { sort: null, order: null },\n                            searchParams,\n                          ),\n                      }}\n                    >\n                      <span className=\"icon\">\n                        <i className=\"fas fa-sort-down\" />\n                      </span>\n                    </Link>\n                  ) : (\n                    <Link\n                      to={{\n                        search: getSearchWith(\n                          (sort === '' || sort !== parameter)\n                            ? { sort: parameter, order: null }\n                            : { order: 'desc' },\n                          searchParams,\n                        ),\n                      }}\n                    >\n                      <span className=\"icon\">\n                        <i className={classNames('fas', {\n                          'fa-sort': sort !== parameter,\n                          'fa-sort-up': sort === parameter && order !== 'desc',\n                        })}\n                        />\n                      </span>\n                    </Link>\n                  )}\n              </span>\n            </th>\n          ))}\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n\n        {people.map((person) => (\n          <PersonLink\n            person={person}\n            people={people}\n            key={person.name}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","export enum Sex {\n  All = '',\n  Male = 'm',\n  Female = 'f',\n}\n","import { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Sex } from '../../types/Sex';\nimport { getSearchWith } from '../../utils/search';\n\nconst ListData = [16, 17, 18, 19, 20];\n\ntype Props = {\n  centuries: string[];\n  query: string;\n  sex: Sex;\n  searchParams: URLSearchParams,\n  setSearchParams: (s: URLSearchParams) => void\n};\n\nexport const PeopleFilters: React.FC<Props> = ({\n  centuries,\n  query,\n  setSearchParams,\n  searchParams,\n  sex,\n}) => {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  function setSearchWith(params: any) {\n    const search = getSearchWith(params, searchParams);\n    const mewSearchParams = new URLSearchParams(search);\n\n    setSearchParams(mewSearchParams);\n  }\n\n  function handleQueryChange(event: React.ChangeEvent<HTMLInputElement>) {\n    setSearchWith({ query: event.target.value || null });\n  }\n\n  return (\n    <nav className=\"panel\">\n      <p className=\"panel-heading\">Filters</p>\n\n      <p className=\"panel-tabs\" data-cy=\"SexFilter\">\n        <Link\n          className={classNames({\n            'is-active': sex === Sex.All,\n          })}\n          to={{ search: getSearchWith({ sex: null }, searchParams) }}\n        >\n          All\n        </Link>\n        <Link\n          className={classNames({\n            'is-active': sex === Sex.Male,\n          })}\n          to={{ search: getSearchWith({ sex: Sex.Male }, searchParams) }}\n        >\n          Male\n        </Link>\n        <Link\n          className={classNames({\n            'is-active': sex === Sex.Female,\n          })}\n          to={{ search: getSearchWith({ sex: Sex.Female }, searchParams) }}\n        >\n          Female\n        </Link>\n      </p>\n\n      <div className=\"panel-block\">\n        <p className=\"control has-icons-left\">\n          <input\n            data-cy=\"NameFilter\"\n            type=\"search\"\n            className=\"input\"\n            placeholder=\"Search\"\n            value={query}\n            onChange={handleQueryChange}\n          />\n\n          <span className=\"icon is-left\">\n            <i className=\"fas fa-search\" aria-hidden=\"true\" />\n          </span>\n        </p>\n      </div>\n\n      <div className=\"panel-block\">\n        <div className=\"level is-flex-grow-1 is-mobile\" data-cy=\"CenturyFilter\">\n          <div className=\"level-left\">\n            {ListData.map(num => (\n              <Link\n                key={num}\n                data-cy=\"century\"\n                className={classNames('button mr-1', {\n                  'is-info': centuries.includes(num.toString()),\n                })}\n                to={{\n                  search: getSearchWith({\n                    centuries: centuries.includes(num.toString())\n                      ? centuries.filter(c => c !== num.toString())\n                      : [...centuries, num.toString()],\n                  }, searchParams),\n                }}\n              >\n                {num}\n              </Link>\n            ))}\n          </div>\n\n          <div className=\"level-right ml-4\">\n            <Link\n              data-cy=\"centuryALL\"\n              className=\"button is-success is-outlined\"\n              to={{\n                search:\n                  getSearchWith({ centuries: null }, searchParams),\n              }}\n            >\n              All\n            </Link>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"panel-block\">\n        <Link\n          className=\"button is-link is-outlined is-fullwidth\"\n          to=\"/people\"\n        >\n          Reset all filters\n        </Link>\n      </div>\n    </nav>\n  );\n};\n","import { Person, PersonsKeys } from '../types';\nimport { Sex } from '../types/Sex';\nimport { Param } from './search';\n\nconst normalizeText = (text: string | null) => {\n  if (!text) {\n    return '';\n  }\n\n  return text.toLowerCase().trim();\n};\n\nexport const getPeopleFilter = (\n  listPeople: Person[],\n  queryName: string,\n  date: string[],\n  gender: Sex,\n  sortParam: PersonsKeys | '',\n  desc: string,\n) => {\n  let filterPeople = [...listPeople];\n\n  if (queryName) {\n    filterPeople = filterPeople.filter(\n      person => normalizeText(person.name).includes(normalizeText(queryName))\n        || normalizeText(person.fatherName).includes(normalizeText(queryName))\n        || normalizeText(person.motherName).includes(normalizeText(queryName)),\n    );\n  }\n\n  if (date.length > 0) {\n    filterPeople = filterPeople.filter(\n      person => date.includes((Math.ceil(person.born / 100).toString())),\n    );\n  }\n\n  if (gender) {\n    filterPeople = filterPeople.filter(\n      person => person.sex === gender,\n    );\n  }\n\n  if (sortParam) {\n    filterPeople = filterPeople.sort((a, b) => {\n      let aValue = a[sortParam] as Param || '';\n      let bValue = b[sortParam] as Param || '';\n\n      if (typeof aValue === 'number' && typeof bValue === 'number') {\n        return aValue - bValue;\n      }\n\n      if (typeof aValue === 'number' || typeof bValue === 'number') {\n        aValue = aValue.toString();\n        bValue = bValue.toString();\n      }\n\n      return normalizeText(aValue).localeCompare(normalizeText(bValue));\n    });\n  }\n\n  if (desc) {\n    filterPeople = filterPeople.reverse();\n  }\n\n  return filterPeople;\n};\n","import { useEffect, useMemo, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { Loader } from '../Loader/Loader';\nimport { Person, PersonsKeys } from '../../types';\nimport { getPeople } from '../../api';\nimport { PeopleTable } from '../PeopleTable';\nimport { PeopleFilters } from '../PeopleFilters';\nimport { Sex } from '../../types/Sex';\nimport { getPeopleFilter } from '../../utils/filter';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') || '';\n  const centuries = searchParams.getAll('centuries') || [];\n  const sex = searchParams.get('sex') as Sex || Sex.All;\n  const sort = searchParams.get('sort') as (PersonsKeys | '') || '';\n  const order = searchParams.get('order') || '';\n\n  useEffect(() => {\n    setIsLoading(true);\n    setIsError(false);\n\n    getPeople()\n      .then(setPeople)\n      .catch(() => setIsError(true))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  const visiblePeople = useMemo(\n    () => getPeopleFilter(people, query, centuries, sex, sort, order),\n    [people, query, centuries, sex, sort, order],\n  );\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"block\">\n\n        {isLoading ? (\n          <div className=\"box table-container\">\n            <Loader />\n          </div>\n        ) : (\n          <div className=\"columns is-desktop is-flex-direction-row-reverse\">\n            <div className=\"column is-7-tablet is-narrow-desktop\">\n              <PeopleFilters\n                sex={sex}\n                centuries={centuries}\n                query={query}\n                setSearchParams={setSearchParams}\n                searchParams={searchParams}\n              />\n            </div>\n\n            <div className=\"column\">\n              <div className=\"box table-container\">\n                <PeopleTable\n                  people={visiblePeople}\n                  searchParams={searchParams}\n                  sort={sort}\n                  order={order}\n                />\n              </div>\n            </div>\n          </div>\n        )}\n\n        {isError && (\n          <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n            Something went wrong\n          </p>\n        )}\n        {(people.length === 0 && !isError && !isLoading) && (\n          <p data-cy=\"noPeopleMessage\">\n            There are no people on the server\n          </p>\n        )}\n      </div>\n    </>\n  );\n};\n","export const NotFoundPage = () => (\n  <h1 className=\"title\">\n    Page not found\n  </h1>\n);\n","import { createRoot } from 'react-dom/client';\nimport { Route, HashRouter as Router, Routes } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\nimport { HomePage } from './components/HomePage';\nimport { PeoplePage } from './components/PeoplePage';\nimport { NotFoundPage } from './components/NotFoundPage';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<App />}>\n          <Route index element={<HomePage />} />\n          <Route path=\"people\">\n            <Route path=\":personSlug?\" element={<PeoplePage />} />\n          </Route>\n\n          <Route path=\"*\" element={<NotFoundPage />} />\n        </Route>\n      </Routes>\n    </Router>,\n  );\n"],"sourceRoot":""}